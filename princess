#!/usr/bin/env python3

"""
Snakemake file waraper for princess.
"""
import argparse
import sys, os, subprocess

# TODO: read the config.yaml file to know the aligner

def get_args():
    parser = argparse.ArgumentParser(epilog="%(prog)s version 0.01. use command -h for info.",
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter,
                                     description='Produce phasing report',
                                     add_help=True, )
    parser.add_argument('-v', '--version', action='version', version='%(prog)s 0.01')

    parser.add_argument('-c', '--command', default="all", help='Princess running command.')




    parser.set_defaults(func=run_princess)

    # if not argument print help.
    # if len(sys.argv) == 1 and  sys.stdin.isatty():  # sys.stdin.isatty() returns false if there's something in stdin
    #      parser.print_help(sys.stderr)
    #      sys.exit(1)

    args = parser.parse_args()


    if 'func' in args:
        args.func(args)
    else:
        parser.print_help()

def run_princess(args):
    if args.command.lower() == "test":
        subprocess.run(['snakemake', '-n', '-p', '-r'], check=True, universal_newlines=True)
    elif args.command.lower() == "align":
        subprocess.run(['snakemake', '-n', '-p', '-r', 'align/minimap/data.bam'], check=True, universal_newlines=True)
    elif args.command.lower() == "sv":
        subprocess.run(['snakemake', '-n', '-p', '-r', 'sv/minimap/sniffles.vcf'], check=True, universal_newlines=True)
    elif args.command.lower() == "phasing":
        subprocess.run(['snakemake', '-n', '-p', '-r', 'phased/minimap/data.vcf'], check=True, universal_newlines=True)
    else:
        print("{} command is not defined.".format(args.command))

def main():
    args = get_args()



if __name__ == "__main__":
    main()
